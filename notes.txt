// @NOTES


User APIS are fully functional 
Rate limiting fully functional 

Logging is partially functional -- get the feature working as intended 
Add id & other cols from the MC 

Need todo 

>domain lock & whitelist origins CORS 
>joi validation

work on getting cors functionality 
any additional middleware needed?
study joi validation & implementation using express - mongo 

reassess upon completion









=== === === === === === === === === === === === === === ===
@@ CODE COMMENTS 

denote where and explain why you instantiated the db and session objects in that location 

explain the math of my rate limiting code 

note where you are checking if a session pre exists, what are you doing IF it does? 

explain the code structure that checks all of the GET / POST structures 

write a README file that explains how to setup & confirgure the Web Service 

write a test script that interacts with the web service to test all the known GEt and POST requests as a part of Unit testing 

=== === === === === === === === === === === === === === ===











>logging feature -- log IP, session, username, usertype, timestamp, action || CRUD action  


userStatsSchema is configured
    could simplify the db as single columns (don't list ALL legends or ALL attributes) -- 
    instead, store the values in a a button & push that value to the table :: validation for this feature should be relatively easy

